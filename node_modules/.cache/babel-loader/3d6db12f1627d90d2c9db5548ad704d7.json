{"ast":null,"code":"var _jsxFileName = \"/Users/sven/Documents/faks/Project-Stock-App/src/containers/LoginRegisterContaienr.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport firebase from \"firebase\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport LoginRegisterScreen from \"../screens/LoginRegisterScreen\";\nimport { replaceLoginScreen } from \"../helpers/navigation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUser } from \"../actions/authAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const loginFields = {\n  email: \"email\",\n  password: \"password\",\n  repeatPassword: \"repeatPassword\"\n};\nexport let Steps;\n\n(function (Steps) {\n  Steps[Steps[\"LOGIN\"] = 0] = \"LOGIN\";\n  Steps[Steps[\"REGISTER\"] = 1] = \"REGISTER\";\n})(Steps || (Steps = {}));\n\nconst LoginRegisterContainer = () => {\n  _s();\n\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    watch,\n    clearErrors,\n    reset\n  } = useForm();\n  const [step, setStep] = React.useState(Steps.LOGIN);\n  const passwordRef = React.useRef({});\n  const history = useHistory();\n  const user = useSelector(state => state.auth.user);\n  const [isMounted, setIsMounted] = React.useState(false);\n  const dispatch = useDispatch();\n  passwordRef.current = watch(loginFields.password, \"\");\n  React.useEffect(() => {\n    if (user === null || user === void 0 ? void 0 : user.uid) {\n      replaceLoginScreen(history);\n    } else {\n      setIsMounted(true);\n    }\n  }, [user, history]);\n  const login = React.useCallback(async data => {\n    try {\n      await firebase.auth().signInWithEmailAndPassword(data.email, data.password).then(res => {\n        dispatch(setUser({\n          email: data.email,\n          uid: res.user ? res.user.uid : \"randomUID\",\n          password: \"\"\n        }));\n        replaceLoginScreen(history);\n      });\n    } catch (error) {}\n  }, [history, dispatch]);\n  const register = React.useCallback(async data => {\n    try {\n      await firebase.auth().createUserWithEmailAndPassword(data.email, data.password).then(res => {\n        var _res$user;\n\n        dispatch(setUser({\n          email: data.email,\n          uid: res.user ? (_res$user = res.user) === null || _res$user === void 0 ? void 0 : _res$user.uid : \"randomUID\",\n          password: \"\"\n        }));\n        replaceLoginScreen(history);\n      });\n    } catch (error) {}\n  }, [history, dispatch]);\n  const changeStep = React.useCallback(() => {\n    clearErrors();\n    reset({\n      email: \"\",\n      password: \"\",\n      repeatPassword: \"\"\n    });\n    setStep(prev => prev === Steps.LOGIN ? Steps.REGISTER : Steps.LOGIN);\n  }, [clearErrors, reset]);\n\n  const submitForm = async data => {\n    if (step === Steps.LOGIN) {\n      await login(data);\n    } else {\n      await register(data);\n    }\n  };\n\n  if (isMounted) {\n    return /*#__PURE__*/_jsxDEV(LoginRegisterScreen, {\n      control: control,\n      errors: errors,\n      step: step,\n      passwordRef: passwordRef,\n      changeStep: changeStep,\n      handleSubmit: handleSubmit(submitForm)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n};\n\n_s(LoginRegisterContainer, \"yYavT2Q0RCXfsy9LVq9QzZuRTU0=\", false, function () {\n  return [useForm, useHistory, useSelector, useDispatch];\n});\n\n_c = LoginRegisterContainer;\nexport default LoginRegisterContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginRegisterContainer\");","map":{"version":3,"sources":["/Users/sven/Documents/faks/Project-Stock-App/src/containers/LoginRegisterContaienr.tsx"],"names":["React","firebase","useForm","useHistory","LoginRegisterScreen","replaceLoginScreen","useDispatch","useSelector","setUser","loginFields","email","password","repeatPassword","Steps","LoginRegisterContainer","control","handleSubmit","formState","errors","watch","clearErrors","reset","step","setStep","useState","LOGIN","passwordRef","useRef","history","user","state","auth","isMounted","setIsMounted","dispatch","current","useEffect","uid","login","useCallback","data","signInWithEmailAndPassword","then","res","error","register","createUserWithEmailAndPassword","changeStep","prev","REGISTER","submitForm"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport firebase from \"firebase\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\n\nimport { LoginInterface } from \"../consts/interfaces\";\nimport LoginRegisterScreen from \"../screens/LoginRegisterScreen\";\nimport { replaceLoginScreen } from \"../helpers/navigation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { State } from \"../reducers\";\nimport { setUser } from \"../actions/authAction\";\n\nexport const loginFields = {\n  email: \"email\",\n  password: \"password\",\n  repeatPassword: \"repeatPassword\",\n};\n\nexport enum Steps {\n  LOGIN,\n  REGISTER,\n}\n\nconst LoginRegisterContainer = () => {\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    watch,\n    clearErrors,\n    reset,\n  } = useForm();\n  const [step, setStep] = React.useState(Steps.LOGIN);\n  const passwordRef = React.useRef({});\n  const history = useHistory();\n  const user = useSelector((state: State) => state.auth.user);\n  const [isMounted, setIsMounted] = React.useState<boolean>(false);\n  const dispatch = useDispatch();\n  passwordRef.current = watch(loginFields.password, \"\");\n\n  React.useEffect(() => {\n    if (user?.uid) {\n      replaceLoginScreen(history);\n    } else {\n      setIsMounted(true);\n    }\n  }, [user, history]);\n\n  const login = React.useCallback(\n    async (data: LoginInterface) => {\n      try {\n        await firebase\n          .auth()\n          .signInWithEmailAndPassword(data.email, data.password)\n          .then((res) => {\n            dispatch(\n              setUser({\n                email: data.email,\n                uid: res.user ? res.user.uid : \"randomUID\",\n                password: \"\",\n              })\n            );\n            replaceLoginScreen(history);\n          });\n      } catch (error) {}\n    },\n    [history, dispatch]\n  );\n\n  const register = React.useCallback(\n    async (data: LoginInterface) => {\n      try {\n        await firebase\n          .auth()\n          .createUserWithEmailAndPassword(data.email, data.password)\n          .then((res) => {\n            dispatch(\n              setUser({\n                email: data.email,\n                uid: res.user ? res.user?.uid : \"randomUID\",\n                password: \"\",\n              })\n            );\n            replaceLoginScreen(history);\n          });\n      } catch (error) {}\n    },\n    [history, dispatch]\n  );\n\n  const changeStep = React.useCallback(() => {\n    clearErrors();\n    reset({ email: \"\", password: \"\", repeatPassword: \"\" });\n    setStep((prev) => (prev === Steps.LOGIN ? Steps.REGISTER : Steps.LOGIN));\n  }, [clearErrors, reset]);\n\n  const submitForm = async (data: LoginInterface) => {\n    if (step === Steps.LOGIN) {\n      await login(data);\n    } else {\n      await register(data);\n    }\n  };\n\n  if (isMounted) {\n    return (\n      <LoginRegisterScreen\n        control={control}\n        errors={errors}\n        step={step}\n        passwordRef={passwordRef}\n        changeStep={changeStep}\n        handleSubmit={handleSubmit(submitForm)}\n      />\n    );\n  }\n  return null;\n};\n\nexport default LoginRegisterContainer;\n"]},"metadata":{},"sourceType":"module"}
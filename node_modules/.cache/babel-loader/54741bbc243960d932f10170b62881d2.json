{"ast":null,"code":"import { translations } from \"../i18n/translation\";\nimport { rules } from \"./rules\";\nexport const MIN_PASSWORD_LENGTH = 5;\nexport const MAX_PASSWORD_LENGTH = 100;\nexport const MIN_FIELD_LENGTH = 2;\nexport const MAX_FIELD_LENGTH = 100;\nexport const OIB_LENGTH = 11;\nexport const loginAndCreateRules = {\n  rules: t => ({\n    email: {\n      required: rules(t).required = {\n        value: true,\n        message: t(translations.email_required_message)\n      },\n      pattern: rules(t).emailPattern = {\n        value: rules(t).emailPattern.value,\n        message: t(translations.email_pattern_invalid)\n      }\n    },\n    password: {\n      required: rules(t).required = {\n        value: true,\n        message: t(translations.password_required_message)\n      },\n      minLength: rules(t).minLength(MIN_PASSWORD_LENGTH, t(translations.password_min_length_invalid)),\n      maxLength: rules(t).maxLength(MAX_PASSWORD_LENGTH, t(translations.password_max_length_invalid))\n    }\n  })\n};","map":{"version":3,"sources":["/Users/sven/Documents/faks/Project-Stock-App/src/consts/rulesFunction.ts"],"names":["translations","rules","MIN_PASSWORD_LENGTH","MAX_PASSWORD_LENGTH","MIN_FIELD_LENGTH","MAX_FIELD_LENGTH","OIB_LENGTH","loginAndCreateRules","t","email","required","value","message","email_required_message","pattern","emailPattern","email_pattern_invalid","password","password_required_message","minLength","password_min_length_invalid","maxLength","password_max_length_invalid"],"mappings":"AAAA,SAASA,YAAT,QAA6B,qBAA7B;AACA,SAASC,KAAT,QAAsC,SAAtC;AACA,OAAO,MAAMC,mBAAmB,GAAG,CAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,GAA5B;AACP,OAAO,MAAMC,gBAAgB,GAAG,CAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,GAAzB;AACP,OAAO,MAAMC,UAAU,GAAG,EAAnB;AASP,OAAO,MAAMC,mBAAuC,GAAG;AACrDN,EAAAA,KAAK,EAAGO,CAAD,KAAmC;AACxCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAGT,KAAK,CAACO,CAAD,CAAL,CAASE,QAAT,GAAoB;AAC7BC,QAAAA,KAAK,EAAE,IADsB;AAE7BC,QAAAA,OAAO,EAAEJ,CAAC,CAACR,YAAY,CAACa,sBAAd;AAFmB,OAD1B;AAKLC,MAAAA,OAAO,EAAGb,KAAK,CAACO,CAAD,CAAL,CAASO,YAAT,GAAwB;AAChCJ,QAAAA,KAAK,EAAEV,KAAK,CAACO,CAAD,CAAL,CAASO,YAAT,CAAsBJ,KADG;AAEhCC,QAAAA,OAAO,EAAEJ,CAAC,CAACR,YAAY,CAACgB,qBAAd;AAFsB;AAL7B,KADiC;AAWxCC,IAAAA,QAAQ,EAAE;AACRP,MAAAA,QAAQ,EAAGT,KAAK,CAACO,CAAD,CAAL,CAASE,QAAT,GAAoB;AAC7BC,QAAAA,KAAK,EAAE,IADsB;AAE7BC,QAAAA,OAAO,EAAEJ,CAAC,CAACR,YAAY,CAACkB,yBAAd;AAFmB,OADvB;AAKRC,MAAAA,SAAS,EAAElB,KAAK,CAACO,CAAD,CAAL,CAASW,SAAT,CACTjB,mBADS,EAETM,CAAC,CAACR,YAAY,CAACoB,2BAAd,CAFQ,CALH;AASRC,MAAAA,SAAS,EAAEpB,KAAK,CAACO,CAAD,CAAL,CAASa,SAAT,CACTlB,mBADS,EAETK,CAAC,CAACR,YAAY,CAACsB,2BAAd,CAFQ;AATH;AAX8B,GAAnC;AAD8C,CAAhD","sourcesContent":["import { translations } from \"../i18n/translation\";\nimport { rules, RulesInterface } from \"./rules\";\nexport const MIN_PASSWORD_LENGTH = 5;\nexport const MAX_PASSWORD_LENGTH = 100;\nexport const MIN_FIELD_LENGTH = 2;\nexport const MAX_FIELD_LENGTH = 100;\nexport const OIB_LENGTH = 11;\n\nexport interface LoginAndCreateData {\n  rules: (t: (value: string) => string) => {\n    email: Partial<RulesInterface> | undefined;\n    password: Partial<RulesInterface> | undefined;\n  };\n}\n\nexport const loginAndCreateRules: LoginAndCreateData = {\n  rules: (t: (value: string) => string) => ({\n    email: {\n      required: (rules(t).required = {\n        value: true,\n        message: t(translations.email_required_message),\n      }),\n      pattern: (rules(t).emailPattern = {\n        value: rules(t).emailPattern.value,\n        message: t(translations.email_pattern_invalid),\n      }),\n    },\n    password: {\n      required: (rules(t).required = {\n        value: true,\n        message: t(translations.password_required_message),\n      }),\n      minLength: rules(t).minLength(\n        MIN_PASSWORD_LENGTH,\n        t(translations.password_min_length_invalid)\n      ),\n      maxLength: rules(t).maxLength(\n        MAX_PASSWORD_LENGTH,\n        t(translations.password_max_length_invalid)\n      ),\n    },\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}
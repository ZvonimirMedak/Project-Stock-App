{"ast":null,"code":"var _jsxFileName = \"/Users/sven/Documents/faks/Project-Stock-App/src/screens/LoginRegisterScreen.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, FormControl, FormHelperText, Link, makeStyles, TextField, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport { loginFields, Steps } from \"../containers/LoginRegisterContainer\";\nimport { useTranslation } from \"react-i18next\";\nimport { translations } from \"../i18n/translation\";\nimport { loginAndCreateRules } from \"../consts/rulesFunction\";\nimport { colors } from \"../consts/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginRegisterScreen = props => {\n  _s();\n\n  var _props$errors$email, _props$errors$passwor;\n\n  const classes = useClasses();\n  const {\n    t\n  } = useTranslation();\n  const titleText = React.useMemo(() => props.step === Steps.LOGIN ? t(translations.login_to_your_account) : t(translations.register), [props.step, t]);\n  const linkText = React.useMemo(() => props.step === Steps.LOGIN ? t(translations.dont_have_an_account) : t(translations.allready_have_an_account), [props.step, t]);\n  const submitButtonText = React.useMemo(() => props.step === Steps.LOGIN ? t(translations.login) : t(translations.register_account), [props.step, t]);\n  const RepeatPasswordField = React.useMemo(() => {\n    if (props.step === Steps.REGISTER) {\n      var _props$errors$repeatP;\n\n      return /*#__PURE__*/_jsxDEV(FormControl, {\n        classes: {\n          root: classes.formContainer\n        },\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          name: loginFields.repeatPassword,\n          defaultValue: \"\",\n          rules: {\n            validate: value => value === props.passwordRef.current || t(translations.password_doesnt_match).toString()\n          },\n          control: props.control,\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(TextField, {\n            name: field.name,\n            value: field.value,\n            onChange: field.onChange,\n            label: t(translations.repeat_password),\n            error: typeof props.errors.repeatPassword !== \"undefined\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          style: {\n            visibility: props.errors.repeatPassword ? \"visible\" : \"hidden\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_props$errors$repeatP = props.errors.repeatPassword) === null || _props$errors$repeatP === void 0 ? void 0 : _props$errors$repeatP.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n\n    return null;\n  }, [props.step, props.control, props.errors, classes.formContainer, t, props.passwordRef]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.mainContainer,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      boxShadow: 4,\n      className: classes.innerContainer,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h3\",\n          classes: {\n            root: classes.titleStyle\n          },\n          children: titleText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          defaultValue: \"\",\n          control: props.control,\n          name: loginFields.email,\n          rules: loginAndCreateRules.rules(t).email,\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(TextField, {\n            name: field.name,\n            value: field.value,\n            onChange: field.onChange,\n            label: t(translations.email),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          style: {\n            visibility: props.errors.email ? \"visible\" : \"hidden\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_props$errors$email = props.errors.email) === null || _props$errors$email === void 0 ? void 0 : _props$errors$email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          defaultValue: \"\",\n          control: props.control,\n          name: loginFields.password,\n          rules: loginAndCreateRules.rules(t).password,\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(TextField, {\n            name: field.name,\n            value: field.value,\n            onChange: field.onChange,\n            type: \"password\",\n            label: t(translations.password)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          style: {\n            visibility: props.errors.password ? \"visible\" : \"hidden\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_props$errors$passwor = props.errors.password) === null || _props$errors$passwor === void 0 ? void 0 : _props$errors$passwor.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), RepeatPasswordField, /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: props.handleSubmit,\n        classes: {\n          root: classes.submitButton\n        },\n        children: submitButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.linkContainer,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: classes.linkText,\n          onClick: props.changeStep,\n          children: linkText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginRegisterScreen, \"oCrgGu1V6Q8v7txnvvcI86QrM6Y=\", false, function () {\n  return [useClasses, useTranslation];\n});\n\n_c = LoginRegisterScreen;\nconst useClasses = makeStyles({\n  mainContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    backgroundColor: colors.bgColor\n  },\n  innerContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minWidth: \"calc(20vw + 250px)\",\n    minHeight: \"70vh\",\n    backgroundColor: colors.white\n  },\n  titleStyle: {\n    fontWeight: \"bold\",\n    padding: 30,\n    fontSize: \"calc(24px + 2.1vw)\"\n  },\n  formContainer: {\n    width: \"70%\",\n    padding: 15\n  },\n  submitButton: {\n    width: \"70%\",\n    paddingTop: 10,\n    paddingBottom: 10,\n    marginTop: 40,\n    fontSize: \"calc(14px + 0.3vw)\"\n  },\n  linkContainer: {\n    marginTop: 35,\n    paddingBottom: 15\n  },\n  linkText: {\n    fontSize: 18,\n    cursor: \"pointer\"\n  }\n});\nexport default LoginRegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginRegisterScreen\");","map":{"version":3,"sources":["/Users/sven/Documents/faks/Project-Stock-App/src/screens/LoginRegisterScreen.tsx"],"names":["Box","Button","FormControl","FormHelperText","Link","makeStyles","TextField","Typography","React","Controller","loginFields","Steps","useTranslation","translations","loginAndCreateRules","colors","LoginRegisterScreen","props","classes","useClasses","t","titleText","useMemo","step","LOGIN","login_to_your_account","register","linkText","dont_have_an_account","allready_have_an_account","submitButtonText","login","register_account","RepeatPasswordField","REGISTER","root","formContainer","repeatPassword","validate","value","passwordRef","current","password_doesnt_match","toString","control","field","name","onChange","repeat_password","errors","visibility","message","mainContainer","innerContainer","titleStyle","email","rules","password","handleSubmit","submitButton","linkContainer","changeStep","display","flexDirection","justifyContent","alignItems","height","backgroundColor","bgColor","minWidth","minHeight","white","fontWeight","padding","fontSize","width","paddingTop","paddingBottom","marginTop","cursor"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  Link,\n  makeStyles,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { Control, Controller } from \"react-hook-form\";\nimport { loginFields, Steps } from \"../containers/LoginRegisterContainer\";\nimport { useTranslation } from \"react-i18next\";\nimport { translations } from \"../i18n/translation\";\nimport { loginAndCreateRules } from \"../consts/rulesFunction\";\nimport { colors } from \"../consts/colors\";\n\ninterface Props {\n  errors: Record<string, any>;\n  control: Control<Record<string, any>>;\n  step: Steps;\n  passwordRef: React.MutableRefObject<{}>;\n  changeStep: () => void;\n  handleSubmit: () => void;\n}\n\nconst LoginRegisterScreen = (props: Props) => {\n  const classes = useClasses();\n  const { t } = useTranslation();\n\n  const titleText = React.useMemo(\n    () =>\n      props.step === Steps.LOGIN\n        ? t(translations.login_to_your_account)\n        : t(translations.register),\n    [props.step, t]\n  );\n\n  const linkText = React.useMemo(\n    () =>\n      props.step === Steps.LOGIN\n        ? t(translations.dont_have_an_account)\n        : t(translations.allready_have_an_account),\n    [props.step, t]\n  );\n\n  const submitButtonText = React.useMemo(\n    () =>\n      props.step === Steps.LOGIN\n        ? t(translations.login)\n        : t(translations.register_account),\n    [props.step, t]\n  );\n\n  const RepeatPasswordField = React.useMemo(() => {\n    if (props.step === Steps.REGISTER) {\n      return (\n        <FormControl classes={{ root: classes.formContainer }}>\n          <Controller\n            name={loginFields.repeatPassword}\n            defaultValue=\"\"\n            rules={{\n              validate: (value: string) =>\n                value === props.passwordRef.current ||\n                t(translations.password_doesnt_match).toString(),\n            }}\n            control={props.control}\n            render={({ field }) => (\n              <TextField\n                name={field.name}\n                value={field.value}\n                onChange={field.onChange}\n                label={t(translations.repeat_password)}\n                error={typeof props.errors.repeatPassword !== \"undefined\"}\n                type=\"password\"\n              />\n            )}\n          />\n          <FormHelperText\n            error\n            style={{\n              visibility: props.errors.repeatPassword ? \"visible\" : \"hidden\",\n            }}\n          >\n            <span>{props.errors.repeatPassword?.message}</span>\n          </FormHelperText>\n        </FormControl>\n      );\n    }\n    return null;\n  }, [\n    props.step,\n    props.control,\n    props.errors,\n    classes.formContainer,\n    t,\n    props.passwordRef,\n  ]);\n\n  return (\n    <Box className={classes.mainContainer}>\n      <Box boxShadow={4} className={classes.innerContainer}>\n        <Box>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n            classes={{ root: classes.titleStyle }}\n          >\n            {titleText}\n          </Typography>\n        </Box>\n        <FormControl className={classes.formContainer}>\n          <Controller\n            defaultValue=\"\"\n            control={props.control}\n            name={loginFields.email}\n            rules={loginAndCreateRules.rules(t).email}\n            render={({ field }) => (\n              <TextField\n                name={field.name}\n                value={field.value}\n                onChange={field.onChange}\n                label={t(translations.email)}\n                type=\"text\"\n              />\n            )}\n          />\n          <FormHelperText\n            error\n            style={{ visibility: props.errors.email ? \"visible\" : \"hidden\" }}\n          >\n            <span>{props.errors.email?.message}</span>\n          </FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formContainer}>\n          <Controller\n            defaultValue=\"\"\n            control={props.control}\n            name={loginFields.password}\n            rules={loginAndCreateRules.rules(t).password}\n            render={({ field }) => (\n              <TextField\n                name={field.name}\n                value={field.value}\n                onChange={field.onChange}\n                type=\"password\"\n                label={t(translations.password)}\n              />\n            )}\n          />\n          <FormHelperText\n            error\n            style={{ visibility: props.errors.password ? \"visible\" : \"hidden\" }}\n          >\n            <span>{props.errors.password?.message}</span>\n          </FormHelperText>\n        </FormControl>\n        {RepeatPasswordField}\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={props.handleSubmit}\n          classes={{ root: classes.submitButton }}\n        >\n          {submitButtonText}\n        </Button>\n        <Box className={classes.linkContainer}>\n          <Link className={classes.linkText} onClick={props.changeStep}>\n            {linkText}\n          </Link>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst useClasses = makeStyles({\n  mainContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    backgroundColor: colors.bgColor,\n  },\n  innerContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minWidth: \"calc(20vw + 250px)\",\n    minHeight: \"70vh\",\n    backgroundColor: colors.white,\n  },\n  titleStyle: {\n    fontWeight: \"bold\",\n    padding: 30,\n    fontSize: \"calc(24px + 2.1vw)\",\n  },\n  formContainer: {\n    width: \"70%\",\n    padding: 15,\n  },\n  submitButton: {\n    width: \"70%\",\n    paddingTop: 10,\n    paddingBottom: 10,\n    marginTop: 40,\n    fontSize: \"calc(14px + 0.3vw)\",\n  },\n  linkContainer: {\n    marginTop: 35,\n    paddingBottom: 15,\n  },\n  linkText: {\n    fontSize: 18,\n    cursor: \"pointer\",\n  },\n});\n\nexport default LoginRegisterScreen;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export function rules(t) {\n  return {\n    required: {\n      value: true,\n      message: t(\"field_required\")\n    },\n    numberPattern: {\n      value: /^[0-9]+$/,\n      message: t(\"pin_validation\")\n    },\n    minLength: (value, message) => ({\n      value,\n      message: message ? t(message) : `${t(`min_length`)} ${value}`\n    }),\n    maxLength: (value, message) => ({\n      value,\n      message: message ? t(message) : `${t(`max_length`)} ${value}`\n    }),\n    emailPattern: {\n      value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      message: t(\"email_pattern_not_valid\")\n    },\n    phoneNumberPattern: {\n      value: /([0-9])|([+])|\\s|([(-)])|([-])/,\n      message: t(\"\")\n    },\n    numberPatternBelow999: {\n      value: /^[^0]([0-9]){0,2}$/,\n      message: t(\"number_pattern_not_valid\")\n    },\n    numberPatternAny: {\n      value: /^[^0]([0-9])+$/,\n      message: t(\"number_valitdation\")\n    },\n    notEmptyPattern: {\n      // eslint-disable-next-line no-useless-escape\n      value: /^[^\\s|^\\- |^\\.].*/,\n      message: t(\"not_empty\")\n    },\n    usernamePattern: {\n      value: /[a-zA-Z]+/,\n      message: t(\"only_words\")\n    }\n  };\n}","map":{"version":3,"sources":["/Users/sven/Documents/faks/Project-Stock-App/src/consts/rules.ts"],"names":["rules","t","required","value","message","numberPattern","minLength","maxLength","emailPattern","phoneNumberPattern","numberPatternBelow999","numberPatternAny","notEmptyPattern","usernamePattern"],"mappings":"AAGA,OAAO,SAASA,KAAT,CAAeC,CAAf,EAA6C;AAClD,SAAO;AACLC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,KAAK,EAAE,IADC;AAERC,MAAAA,OAAO,EAAEH,CAAC,CAAC,gBAAD;AAFF,KADL;AAKLI,IAAAA,aAAa,EAAE;AACbF,MAAAA,KAAK,EAAE,UADM;AAEbC,MAAAA,OAAO,EAAEH,CAAC,CAAC,gBAAD;AAFG,KALV;AASLK,IAAAA,SAAS,EAAE,CAACH,KAAD,EAAgBC,OAAhB,MAAsC;AAC/CD,MAAAA,KAD+C;AAE/CC,MAAAA,OAAO,EAAEA,OAAO,GAAGH,CAAC,CAACG,OAAD,CAAJ,GAAiB,GAAEH,CAAC,CAAE,YAAF,CAAe,IAAGE,KAAM;AAFb,KAAtC,CATN;AAaLI,IAAAA,SAAS,EAAE,CAACJ,KAAD,EAAgBC,OAAhB,MAAsC;AAC/CD,MAAAA,KAD+C;AAE/CC,MAAAA,OAAO,EAAEA,OAAO,GAAGH,CAAC,CAACG,OAAD,CAAJ,GAAiB,GAAEH,CAAC,CAAE,YAAF,CAAe,IAAGE,KAAM;AAFb,KAAtC,CAbN;AAiBLK,IAAAA,YAAY,EAAE;AACZL,MAAAA,KAAK,EACH,uJAFU;AAGZC,MAAAA,OAAO,EAAEH,CAAC,CAAC,yBAAD;AAHE,KAjBT;AAsBLQ,IAAAA,kBAAkB,EAAE;AAClBN,MAAAA,KAAK,EAAE,gCADW;AAElBC,MAAAA,OAAO,EAAEH,CAAC,CAAC,EAAD;AAFQ,KAtBf;AA0BLS,IAAAA,qBAAqB,EAAE;AACrBP,MAAAA,KAAK,EAAE,oBADc;AAErBC,MAAAA,OAAO,EAAEH,CAAC,CAAC,0BAAD;AAFW,KA1BlB;AA8BLU,IAAAA,gBAAgB,EAAE;AAChBR,MAAAA,KAAK,EAAE,gBADS;AAEhBC,MAAAA,OAAO,EAAEH,CAAC,CAAC,oBAAD;AAFM,KA9Bb;AAkCLW,IAAAA,eAAe,EAAE;AACf;AACAT,MAAAA,KAAK,EAAE,mBAFQ;AAGfC,MAAAA,OAAO,EAAEH,CAAC,CAAC,WAAD;AAHK,KAlCZ;AAuCLY,IAAAA,eAAe,EAAE;AACfV,MAAAA,KAAK,EAAE,WADQ;AAEfC,MAAAA,OAAO,EAAEH,CAAC,CAAC,YAAD;AAFK;AAvCZ,GAAP;AA4CD","sourcesContent":["import React from \"react\";\nimport { ValidationRule, ValidationValueMessage } from \"react-hook-form\";\n\nexport function rules(t: (value: string) => string) {\n  return {\n    required: {\n      value: true,\n      message: t(\"field_required\"),\n    },\n    numberPattern: {\n      value: /^[0-9]+$/,\n      message: t(\"pin_validation\"),\n    },\n    minLength: (value: number, message?: string) => ({\n      value,\n      message: message ? t(message) : `${t(`min_length`)} ${value}`,\n    }),\n    maxLength: (value: number, message?: string) => ({\n      value,\n      message: message ? t(message) : `${t(`max_length`)} ${value}`,\n    }),\n    emailPattern: {\n      value:\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      message: t(\"email_pattern_not_valid\"),\n    },\n    phoneNumberPattern: {\n      value: /([0-9])|([+])|\\s|([(-)])|([-])/,\n      message: t(\"\"),\n    },\n    numberPatternBelow999: {\n      value: /^[^0]([0-9]){0,2}$/,\n      message: t(\"number_pattern_not_valid\"),\n    },\n    numberPatternAny: {\n      value: /^[^0]([0-9])+$/,\n      message: t(\"number_valitdation\"),\n    },\n    notEmptyPattern: {\n      // eslint-disable-next-line no-useless-escape\n      value: /^[^\\s|^\\- |^\\.].*/,\n      message: t(\"not_empty\"),\n    },\n    usernamePattern: {\n      value: /[a-zA-Z]+/,\n      message: t(\"only_words\"),\n    },\n  };\n}\n\nexport interface RulesInterface {\n  required: string | boolean | ValidationValueMessage<boolean>;\n  min: ValidationRule<React.ReactText>;\n  max: ValidationRule<React.ReactText>;\n  maxLength: ValidationRule<React.ReactText>;\n  minLength: ValidationRule<React.ReactText>;\n  pattern: ValidationRule<RegExp>;\n}\n"]},"metadata":{},"sourceType":"module"}
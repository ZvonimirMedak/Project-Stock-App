{"ast":null,"code":"var _jsxFileName = \"/Users/sven/Documents/faks/Project-Stock-App/src/wrappers/AuthentificationWrapper.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport MainRouter from \"../router/MainRouter\";\nimport firebase from \"firebase\";\nimport { firebaseConfig } from \"../consts/firebaseEnv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthentificationWrapper = () => {\n  _s();\n\n  const classes = useClasses();\n  const [isMounted, setIsMounted] = React.useState(false);\n  const firebaseCheck = React.useCallback(() => {\n    return new Promise(resolve => {\n      firebase.auth().onAuthStateChanged(user => {\n        resolve(user);\n      });\n    });\n  }, []);\n  const checkIfAllreadLogin = React.useCallback(async () => {\n    try {\n      const response = await firebaseCheck();\n\n      if (response && response.email && response.uid) {\n        /* something like this\n        dispatch(\n          setUser({ email: response.email, uid: response.uid, password: \"\" })\n        );\n        */\n      }\n\n      setIsMounted(true);\n    } catch (error) {\n      setIsMounted(true);\n    }\n  }, []);\n  React.useEffect(() => {\n    if (firebase.apps.length === 0) {\n      firebase.initializeApp({\n        apiKey: firebaseConfig.API_KEY,\n        authDomain: firebaseConfig.AUTH_DOMAIN,\n        projectId: firebaseConfig.PROJECT_ID,\n        messagingSenderId: firebaseConfig.MESSAGING_SENDER_ID,\n        storageBucket: firebaseConfig.STORAGE_BUCKET,\n        appId: firebaseConfig.APP_ID\n      });\n    }\n\n    checkIfAllreadLogin();\n  }, [checkIfAllreadLogin]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.main,\n      children: /*#__PURE__*/_jsxDEV(MainRouter, {\n        authentificationToken: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AuthentificationWrapper, \"gR/V46f6IrUudT0bV6QXl8+opIU=\", false, function () {\n  return [useClasses];\n});\n\n_c = AuthentificationWrapper;\nconst useClasses = makeStyles({\n  main: {\n    boxSizing: \"border-box\",\n    width: \"100%\",\n    marginLeft: \"auto\",\n    marginRight: 0\n  }\n});\nexport default AuthentificationWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthentificationWrapper\");","map":{"version":3,"sources":["/Users/sven/Documents/faks/Project-Stock-App/src/wrappers/AuthentificationWrapper.tsx"],"names":["React","makeStyles","MainRouter","firebase","firebaseConfig","AuthentificationWrapper","classes","useClasses","isMounted","setIsMounted","useState","firebaseCheck","useCallback","Promise","resolve","auth","onAuthStateChanged","user","checkIfAllreadLogin","response","email","uid","error","useEffect","apps","length","initializeApp","apiKey","API_KEY","authDomain","AUTH_DOMAIN","projectId","PROJECT_ID","messagingSenderId","MESSAGING_SENDER_ID","storageBucket","STORAGE_BUCKET","appId","APP_ID","main","boxSizing","width","marginLeft","marginRight"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,SAASC,cAAT,QAA+B,uBAA/B;;;;AAEA,MAAMC,uBAAuB,GAAG,MAAM;AAAA;;AACpC,QAAMC,OAAO,GAAGC,UAAU,EAA1B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,KAAK,CAACU,QAAN,CAAwB,KAAxB,CAAlC;AAEA,QAAMC,aAAa,GAAGX,KAAK,CAACY,WAAN,CAAkB,MAAqC;AAC3E,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BX,MAAAA,QAAQ,CAACY,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAU;AAC3CH,QAAAA,OAAO,CAACG,IAAD,CAAP;AACD,OAFD;AAGD,KAJM,CAAP;AAKD,GANqB,EAMnB,EANmB,CAAtB;AAQA,QAAMC,mBAAmB,GAAGlB,KAAK,CAACY,WAAN,CAAkB,YAAY;AACxD,QAAI;AACF,YAAMO,QAAQ,GAAG,MAAMR,aAAa,EAApC;;AACA,UAAIQ,QAAQ,IAAIA,QAAQ,CAACC,KAArB,IAA8BD,QAAQ,CAACE,GAA3C,EAAgD;AAC9C;AACR;AACA;AACA;AACA;AACO;;AACDZ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAVD,CAUE,OAAOa,KAAP,EAAc;AACdb,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAd2B,EAczB,EAdyB,CAA5B;AAgBAT,EAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AACpB,QAAIpB,QAAQ,CAACqB,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC9BtB,MAAAA,QAAQ,CAACuB,aAAT,CAAuB;AACrBC,QAAAA,MAAM,EAAEvB,cAAc,CAACwB,OADF;AAErBC,QAAAA,UAAU,EAAEzB,cAAc,CAAC0B,WAFN;AAGrBC,QAAAA,SAAS,EAAE3B,cAAc,CAAC4B,UAHL;AAIrBC,QAAAA,iBAAiB,EAAE7B,cAAc,CAAC8B,mBAJb;AAKrBC,QAAAA,aAAa,EAAE/B,cAAc,CAACgC,cALT;AAMrBC,QAAAA,KAAK,EAAEjC,cAAc,CAACkC;AAND,OAAvB;AAQD;;AACDpB,IAAAA,mBAAmB;AACpB,GAZD,EAYG,CAACA,mBAAD,CAZH;AAcA,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAEZ,OAAO,CAACiC,IAAzB;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,qBAAqB,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,CAjDD;;GAAMlC,uB;UACYE,U;;;KADZF,uB;AAmDN,MAAME,UAAU,GAAGN,UAAU,CAAC;AAC5BsC,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,YADP;AAEJC,IAAAA,KAAK,EAAE,MAFH;AAGJC,IAAAA,UAAU,EAAE,MAHR;AAIJC,IAAAA,WAAW,EAAE;AAJT;AADsB,CAAD,CAA7B;AASA,eAAetC,uBAAf","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport MainRouter from \"../router/MainRouter\";\nimport firebase from \"firebase\";\n\nimport { firebaseConfig } from \"../consts/firebaseEnv\";\n\nconst AuthentificationWrapper = () => {\n  const classes = useClasses();\n  const [isMounted, setIsMounted] = React.useState<boolean>(false);\n\n  const firebaseCheck = React.useCallback((): Promise<firebase.User | null> => {\n    return new Promise((resolve) => {\n      firebase.auth().onAuthStateChanged((user) => {\n        resolve(user);\n      });\n    });\n  }, []);\n\n  const checkIfAllreadLogin = React.useCallback(async () => {\n    try {\n      const response = await firebaseCheck();\n      if (response && response.email && response.uid) {\n        /* something like this\n        dispatch(\n          setUser({ email: response.email, uid: response.uid, password: \"\" })\n        );\n        */\n      }\n      setIsMounted(true);\n    } catch (error) {\n      setIsMounted(true);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (firebase.apps.length === 0) {\n      firebase.initializeApp({\n        apiKey: firebaseConfig.API_KEY,\n        authDomain: firebaseConfig.AUTH_DOMAIN,\n        projectId: firebaseConfig.PROJECT_ID,\n        messagingSenderId: firebaseConfig.MESSAGING_SENDER_ID,\n        storageBucket: firebaseConfig.STORAGE_BUCKET,\n        appId: firebaseConfig.APP_ID,\n      });\n    }\n    checkIfAllreadLogin();\n  }, [checkIfAllreadLogin]);\n\n  return (\n    <>\n      <main className={classes.main}>\n        <MainRouter authentificationToken={\"\"} />\n      </main>\n    </>\n  );\n};\n\nconst useClasses = makeStyles({\n  main: {\n    boxSizing: \"border-box\",\n    width: \"100%\",\n    marginLeft: \"auto\",\n    marginRight: 0,\n  },\n});\n\nexport default AuthentificationWrapper;\n"]},"metadata":{},"sourceType":"module"}